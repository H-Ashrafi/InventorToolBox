<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Autodesk.iLogic.Types</name>
    </assembly>
    <members>
        <member name="F:Autodesk.InventorBuilder.VersionInfo.AssemblyVersion">
            <summary>
            Inventor Build Number Centralization(for C# projects)
            This holds central version numbers for .NET assemblies.
            </summary>
        </member>
        <member name="F:Autodesk.InventorBuilder.VersionInfo.CopyRightFrom1996">
            <summary>
            Inventor Copyright Year Centralization(for C# projects)
            To update the copyright year for all executables and About dialogs, 
            we need to change the end year in below block, for example, 
            for Zora release, replace all end years with 2018.
            </summary>
        </member>
        <member name="T:Autodesk.iLogic.Types.ComponentArgument">
            <summary>
            Wrapper for a component occurrence, occurrence name, or occurrence path based on occurrence names.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.ComponentArgument.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.ComponentArgument.Occurrence">
            <summary>
            Gets the component occurrence.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.ComponentArgument.Path">
            <summary>
            Gets the path items.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentArgument.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentArgument.#ctor(Autodesk.iLogic.Types.ManagedComponentOccurrence)">
            <summary>
            Constructor.
            </summary>
            <param name="occurrence"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentArgument.#ctor(System.String[])">
            <summary>
            Constructor
            </summary>
            <param name="pathItems"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentArgument.op_Implicit(System.String)~Autodesk.iLogic.Types.ComponentArgument">
            <summary>
            Convert a name.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentArgument.op_Implicit(Autodesk.iLogic.Types.ManagedComponentOccurrence)~Autodesk.iLogic.Types.ComponentArgument">
            <summary>
            Convert a component occurrence.
            </summary>
            <param name="occurrence"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentArgument.op_Implicit(System.String[])~Autodesk.iLogic.Types.ComponentArgument">
            <summary>
            Convert an array of items.
            </summary>
            <param name="pathItems"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentArgument.GetComponentArgumentFromObject(System.Object)">
            <summary>
            Converts a general object to a ComponentArgument object.
            </summary>
            <param name="obj"></param>
            <returns>Nothing if the object is not convertible.</returns>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentArgument.GetDisplayName(Autodesk.iLogic.Types.ComponentArgument)">
            <summary>
            Get the component name. This might be a path. Recommmended for use only in a message.
            </summary>
            <param name="componentArgument"></param>
            <returns></returns>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentArgument.IsContainingAssembly(Autodesk.iLogic.Types.ComponentArgument)">
            <summary>
            Tests to see if the component argument actually refers to the containing assembly, rather than a component within it.
            </summary>
            <param name="component">The component argument.</param>
            <returns>True if the argument refers to the containing assembly.</returns>
        </member>
        <member name="T:Autodesk.iLogic.Types.ComponentOrPattern">
            <summary>
            Wrapper for a component occurrence, pattern, or a name of either one of those.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.ComponentOrPattern.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.ComponentOrPattern.Occurrence">
            <summary>
            Gets the component occurrence.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.ComponentOrPattern.Pattern">
            <summary>
            Gets the pattern.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.ComponentOrPattern.Items">
            <summary>
            Gets the items, if more than one.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentOrPattern.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentOrPattern.#ctor(Autodesk.iLogic.Types.ManagedComponentOccurrence)">
            <summary>
            Constructor.
            </summary>
            <param name="occurrence"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentOrPattern.#ctor(Autodesk.iLogic.Types.ManagedPattern)">
            <summary>
            Constructor.
            </summary>
            <param name="pattern"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentOrPattern.#ctor(System.Collections.Generic.IEnumerable{Autodesk.iLogic.Types.ComponentOrPattern})">
            <summary>
            Constructor
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentOrPattern.#ctor(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Construct from a list of objects.
            If one of the items is not convertible to a ComponentOrPattern, an exception will be thrown.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentOrPattern.op_Implicit(System.String)~Autodesk.iLogic.Types.ComponentOrPattern">
            <summary>
            Convert a name.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentOrPattern.op_Implicit(Autodesk.iLogic.Types.ManagedComponentOccurrence)~Autodesk.iLogic.Types.ComponentOrPattern">
            <summary>
            Convert a component occurrence.
            </summary>
            <param name="occurrence"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentOrPattern.op_Implicit(Autodesk.iLogic.Types.ManagedPattern)~Autodesk.iLogic.Types.ComponentOrPattern">
            <summary>
            Convert a component pattern.
            </summary>
            <param name="pattern"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentOrPattern.op_Implicit(Autodesk.iLogic.Types.ComponentOrPattern[])~Autodesk.iLogic.Types.ComponentOrPattern">
            <summary>
            Convert an array of items.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentOrPattern.op_Implicit(System.Object[])~Autodesk.iLogic.Types.ComponentOrPattern">
            <summary>
            Convert an array of objects. If one of the items is not convertible to a ComponentOrPattern, an exception will be thrown.
            </summary>
            <param name="items"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.ComponentOrPattern.GetItems">
            <summary>
            Gets all items.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.ComponentOrPattern.IsNull">
            <summary>
            Returns true if this object contains no data.
            </summary>
        </member>
        <member name="T:Autodesk.iLogic.Types.DocumentUnitsGeometry">
            <summary>
            Base class for points, vectors, and matrices in document units.
            </summary>
        </member>
        <member name="T:Autodesk.iLogic.Types.DocumentUnitsMatrix">
            <summary>
            Provides properties and functions for a transformation matrix with coordinates in document units.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.#ctor(Inventor.InventorServerObject,Inventor.UnitsOfMeasure)">
            <summary>
            Constructor of DocumentUnitsMatrix.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.#ctor(Inventor.InventorServerObject,Inventor.UnitsOfMeasure,System.Double[])">
            <summary>
            Constructor of DocumentUnitsMatrix.
            </summary>
            <param name="inventorServer"></param>
            <param name="unitsOfMeasure"></param>
            <param name="cells"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.#ctor(Inventor.InventorServerObject,Inventor.UnitsOfMeasure,Inventor.Matrix)">
            <summary>
            Constructor of DocumentUnitsMatrix.
            </summary>
            <param name="inventorServer"></param>
            <param name="unitsOfMeasure"></param>
            <param name="matrix">Inventor matrix in Inventor internal units</param>
        </member>
        <member name="P:Autodesk.iLogic.Types.DocumentUnitsMatrix.InDatabaseUnits">
            <summary>
            Get/set the Inventor matrix in Inventor internal units.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.DocumentUnitsMatrix.Item(System.Int32,System.Int32)">
            <summary>
            Get/set the value of matrix on specified row and column.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.DocumentUnitsMatrix.Determinant">
            <summary>
            Get the determinant of this matrix.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.DocumentUnitsMatrix.Translation">
            <summary>
            Get the translation portion of the matrix.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.DocumentUnitsMatrix.Autodesk#iLogic#Types#PointOrMatrix#Point">
            <summary>
            Get property of PointOrMatrix. Return null.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.DocumentUnitsMatrix.Autodesk#iLogic#Types#PointOrMatrix#Matrix">
            <summary>
            Get property of PointOrMatrix. Return this matrix.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.Copy">
            <summary>
            Creates a copy of this Matrix object. The result is entirely independent and can be edited without affecting the original Matrix object.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.GetCoordinateSystem(Autodesk.iLogic.Types.DocumentUnitsPoint@,Autodesk.iLogic.Types.DocumentUnitsVector@,Autodesk.iLogic.Types.DocumentUnitsVector@,Autodesk.iLogic.Types.DocumentUnitsVector@)">
            <summary>
            Get the coordinate system that this matrix maps to from the standard coordinate system.
            </summary>
            <param name="origin">Output Point object that defines the origin of the coordinate system.</param>
            <param name="xAxis">Output Vector object that defines the X-axis vector of the coordinate system.</param>
            <param name="yAxis">Output Vector object that defines the Y-axis vector of the coordinate system.</param>
            <param name="zAxis">Output Vector object that defines the Z-axis vector of the coordinate system.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.GetMatrixData(System.Double[]@)">
            <summary>
            Get the data defining this matrix.
            </summary>
            <param name="cells">Output Double that specifies the matrix's coordinates.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.Invert">
            <summary>
            Invert this matrix.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.IsEqualTo(Autodesk.iLogic.Types.DocumentUnitsMatrix,System.Double)">
            <summary>
            Compares this matrix for equality with the specified matrix.
            </summary>
            <param name="matrix">Input Matrix object that specifies matrix to compare.</param>
            <param name="tolerance">Input Double that specifies the tolerance to be used when determining whether the matrices are equal. This Is an optional argument whose default value Is 0.0.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.PostMultiplyBy(Autodesk.iLogic.Types.DocumentUnitsMatrix)">
            <summary>
            Method that post-multiplies this matrix by the specified matrix, setting this matrix to the result.
            </summary>
            <param name="matrix">Input Matrix object that specifies the matrix to post-multiply by.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.PreMultiplyBy(Autodesk.iLogic.Types.DocumentUnitsMatrix)">
            <summary>
            Method that pre-multiplies this matrix by the specified matrix, setting this matrix to the result.
            </summary>
            <param name="matrix">Input Matrix object that specifies the matrix to pre-multiply by.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.PutMatrixData(System.Double[])">
            <summary>
            Method that sets the data defining this matrix.
            </summary>
            <param name="cells">Input Double that specifies the entity's coordinates.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.SetCoordinateSystem(Autodesk.iLogic.Types.DocumentUnitsPoint,Autodesk.iLogic.Types.DocumentUnitsVector,Autodesk.iLogic.Types.DocumentUnitsVector,Autodesk.iLogic.Types.DocumentUnitsVector)">
            <summary>
            Sets this matrix to be the matrix that maps from the standard coordinate system to the specified coordinate system.
            </summary>
            <param name="origin">Input Point object that defines the origin of the coordinate system.</param>
            <param name="xAxis">Input Vector object that defines the X-axis vector of the coordinate system.</param>
            <param name="yAxis">Input Vector object that defines the Y-axis vector of the coordinate system.</param>
            <param name="zAxis">Input Vector object that defines the Z-axis vector of the coordinate system.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.SetToAlignCoordinateSystems(Autodesk.iLogic.Types.DocumentUnitsPoint,Autodesk.iLogic.Types.DocumentUnitsVector,Autodesk.iLogic.Types.DocumentUnitsVector,Autodesk.iLogic.Types.DocumentUnitsVector,Autodesk.iLogic.Types.DocumentUnitsPoint,Autodesk.iLogic.Types.DocumentUnitsVector,Autodesk.iLogic.Types.DocumentUnitsVector,Autodesk.iLogic.Types.DocumentUnitsVector)">
            <summary>
            Sets this matrix to be the matrix that maps from the 'from' coordinate system to the 'to' coordinate system.
            </summary>
            <param name="fromOrigin">Input Point object that defines the origin to map the coordinate system from.</param>
            <param name="fromXAxis">Input Vector object that defines the X-axis to map the coordinate system from.</param>
            <param name="fromYAxis">Input Vector object that defines the Y-axis to map the coordinate system from.</param>
            <param name="fromZAxis">Input Vector object that defines the Z-axis to map the coordinate system from.</param>
            <param name="toOrigin">Input Point object that defines the origin to map the coordinate system to.</param>
            <param name="toXAxis">Input Vector object that defines the X-axis to map the coordinate system to.</param>
            <param name="toYAxis">Input Vector object that defines the Y-axis to map the coordinate system to.</param>
            <param name="toZAxis">Input Vector object that defines the Z-axis to map the coordinate system to.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.SetToIdentity">
            <summary>
            Sets this matrix to the identity matrix.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.SetToRotateTo(Autodesk.iLogic.Types.DocumentUnitsVector,Autodesk.iLogic.Types.DocumentUnitsVector,Autodesk.iLogic.Types.DocumentUnitsVector)">
            <summary>
            Sets to the matrix of rotation that would align the 'from' vector with the 'to' vector. The optional Axis argument may be used when the two vectors are parallel and in opposite directions to specify a specific solution, but is otherwise ignored.
            </summary>
            <param name="fromVector">Input Vector object to align from.</param>
            <param name="toVector">Input Vector object to align to.</param>
            <param name="axis">Input Vector object. This Is an optional argument whose default value Is 0.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.SetToRotation(System.Double,Autodesk.iLogic.Types.DocumentUnitsVector,Autodesk.iLogic.Types.DocumentUnitsPoint)">
            <summary>
            Sets this matrix to the matrix of rotation by the specified angle, through the specified origin, around the specified axis.
            </summary>
            <param name="angle">Input Double that specifies the angle of rotation in document units.</param>
            <param name="axis">Input Vector object.</param>
            <param name="centerPoint">Input Point object that specifies the origin.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.SetTranslation(Autodesk.iLogic.Types.DocumentUnitsVector,System.Boolean)">
            <summary>
            Sets the translation portion of the matrix. If the optional ResetRotation flag is True, the rotation portion of the matrix is reset to identity.
            </summary>
            <param name="translation">Input to subtract.</param>
            <param name="resetRotation">Optional input Boolean that indicates whether to reset to rotation portion of the matrix to identity. This Is an optional argument whose default value Is False.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsMatrix.TransformBy(Autodesk.iLogic.Types.DocumentUnitsMatrix)">
            <summary>
            Method that sets this matrix to the result of this transformation followed by the specified transformation (a pre-multiplication of this matrix by the specified matrix).
            </summary>
            <param name="matrix">Input Matrix object that specifies the matrix to transform by.</param>
        </member>
        <member name="T:Autodesk.iLogic.Types.DocumentUnitsPoint">
            <summary>
            Provides properties, functions and operators for a point with coordinates in document units.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsPoint.#ctor(Inventor.InventorServerObject,Inventor.UnitsOfMeasure,System.Double,System.Double,System.Double)">
            <summary>
            Constructor of DocumentUnitsPoint.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsPoint.#ctor(Inventor.InventorServerObject,Inventor.UnitsOfMeasure,Inventor.Point)">
            <summary>
            Constructor of DocumentUnitsPoint.
            </summary>
            <param name="inventorServer"></param>
            <param name="unitsOfMeasure"></param>
            <param name="point">Inventor point in Inventor internal units</param>
        </member>
        <member name="P:Autodesk.iLogic.Types.DocumentUnitsPoint.InDatabaseUnits">
            <summary>
            Get/set the Inventor point in Inventor internal units.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.DocumentUnitsPoint.X">
            <summary>
            This is a read/write property whose value is a Double.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.DocumentUnitsPoint.Y">
            <summary>
            This is a read/write property whose value is a Double.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.DocumentUnitsPoint.Z">
            <summary>
            This is a read/write property whose value is a Double.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.DocumentUnitsPoint.Autodesk#iLogic#Types#PointOrMatrix#Point">
            <summary>
            Get property of PointOrMatrix. Return this point.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.DocumentUnitsPoint.Autodesk#iLogic#Types#PointOrMatrix#Matrix">
            <summary>
            Get property of PointOrMatrix. Return null.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsPoint.op_Addition(Autodesk.iLogic.Types.DocumentUnitsPoint,Autodesk.iLogic.Types.DocumentUnitsVector)">
            <summary>
            Translate point by vector.
            Returns a point that is equivalent to the result of translating the point by the vector.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsPoint.op_Subtraction(Autodesk.iLogic.Types.DocumentUnitsPoint,Autodesk.iLogic.Types.DocumentUnitsVector)">
            <summary>
            Translate point by -vector.
            Returns a point that is equivalent to the result of translating the point by the -vector.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsPoint.op_Subtraction(Autodesk.iLogic.Types.DocumentUnitsPoint,Autodesk.iLogic.Types.DocumentUnitsPoint)">
            <summary>
            Get translate vector between two points
            This operator returns a vector which is equivalent to the translation that takes pointA to pointB.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsPoint.Copy">
            <summary>
            Creates a copy of this Point object. The result is entirely independent and can be edited without affecting the original Point object.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsPoint.DistanceTo(Autodesk.iLogic.Types.DocumentUnitsPoint)">
            <summary>
            Determine the distance between this point and the specified point.
            </summary>
            <param name="point">Input object that specifies the point.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsPoint.GetPointData(System.Double[]@)">
            <summary>
             Get the data defining this point.
             </summary>
            <param name="coords">Output Double that specifies the entity's coordinates.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsPoint.IsEqualTo(Autodesk.iLogic.Types.DocumentUnitsPoint,System.Double)">
            <summary>
            Compares this point for equality with the specified point.
            </summary>
            <param name="point">Input Point object that specifies the coordinate to compare.</param>
            <param name="tolerance">Input Double that specifies the tolerance to be used when determining whether the points are equal. This Is an optional argument whose default value Is 0.0.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsPoint.PutPointData(System.Double[]@)">
            <summary>
            Method that sets the data defining this point.
            </summary>
            <param name="coords">Input Double that specifies the entity's coordinates.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsPoint.TransformBy(Autodesk.iLogic.Types.DocumentUnitsMatrix)">
            <summary>
            Transform this point by the specified matrix.
            </summary>
            <param name="matrix">Input Matrix object that specifies the matrix to transform by.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsPoint.TranslateBy(Autodesk.iLogic.Types.DocumentUnitsVector)">
            <summary>
            Translate this point by the specified vector.
            </summary>
            <param name="vector">Input Vector object that specifies the vector to translate by.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsPoint.VectorTo(Autodesk.iLogic.Types.DocumentUnitsPoint)">
            <summary>
            Gets the vector of translation between this point and the specified point.
            </summary>
            <param name="point">Input object that specifies the point.</param>
        </member>
        <member name="T:Autodesk.iLogic.Types.DocumentUnitsVector">
            <summary>
            Provides properties, functions and operators for a vector with components in document units.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.#ctor(Inventor.InventorServerObject,Inventor.UnitsOfMeasure,System.Double,System.Double,System.Double)">
            <summary>
            Constructor of DocumentUnitsVector.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.DocumentUnitsVector.InDatabaseUnits">
            <summary>
            Get/set the Inventor vector in Inventor internal units.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.DocumentUnitsVector.X">
            <summary>
            This is a read/write property whose value is a Double.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.DocumentUnitsVector.Y">
            <summary>
            This is a read/write property whose value is a Double.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.DocumentUnitsVector.Z">
            <summary>
            This is a read/write property whose value is a Double.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.DocumentUnitsVector.Length">
            <summary>
            Get the length of this vector.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.op_Addition(Autodesk.iLogic.Types.DocumentUnitsVector,Autodesk.iLogic.Types.DocumentUnitsVector)">
            <summary>
            Add vector to vector.
            Like AddVector(), but creates a new object.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.op_Subtraction(Autodesk.iLogic.Types.DocumentUnitsVector,Autodesk.iLogic.Types.DocumentUnitsVector)">
            <summary>
            Subtract vector from vector.
            Like SubtractVector(), but creates a new object.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.AddVector(Autodesk.iLogic.Types.DocumentUnitsVector)">
            <summary>
            Add the specified vector to this vector.
            </summary>
            <param name="vector">Input to add.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.AngleTo(Autodesk.iLogic.Types.DocumentUnitsVector)">
            <summary>
            Determines the angle between this vector and the specified vector. The angle value is in document units.
            </summary>
            <param name="vector">Input used for comparison.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.AsUnitVector">
            <summary>
            Get the unit vector equivalent of this vector normalized.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.Copy">
            <summary>
            Creates a copy of this Vector object. The result is entirely independent and can be edited without affecting the original Vector object.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.CrossProduct(Autodesk.iLogic.Types.DocumentUnitsVector)">
            <summary>
            Determine the cross product between this vector and the specified vector.
            </summary>
            <param name="vector">Input used for comparison.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.DotProduct(Autodesk.iLogic.Types.DocumentUnitsVector)">
            <summary>
            Determine the dot product of this vector to the specified vector.
            </summary>
            <param name="vector">Input used for comparison.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.GetVectorData(System.Double[]@)">
            <summary>
            Get the data defining this vector.
            </summary>
            <param name="coords">Output Double that specifies the entity's coordinates.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.IsEqualTo(Autodesk.iLogic.Types.DocumentUnitsVector,System.Double)">
            <summary>
            Compares this vector for equality with the specified point.
            </summary>
            <param name="vector">Input used for comparison.</param>
            <param name="tolerance">Input Double that specifies the tolerance to be used when determining whether the vectors are equal. This Is an optional argument whose default value Is 0.0.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.IsParallelTo(Autodesk.iLogic.Types.DocumentUnitsVector,System.Double)">
            <summary>
            Determine if this vector is parallel to the specified vector.
            </summary>
            <param name="vector">Input used for comparison.</param>
            <param name="tolerance">Input Double that specifies the tolerance to be used when determining whether the vectors are parallel. This Is an optional argument whose default value Is 0.0.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.IsPerpendicularTo(Autodesk.iLogic.Types.DocumentUnitsVector,System.Double)">
            <summary>
            Determine if this vector is perpendicular to the specified vector.
            </summary>
            <param name="vector">Input used for comparison.</param>
            <param name="tolerance">Input Double that specifies the tolerance to be used when determining whether the vectors are perpendicular. This Is an optional argument whose default value Is 0.0.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.Normalize">
            <summary>
            Normalize this vector to result in a length equal to 1.0.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.PutVectorData(System.Double[]@)">
            <summary>
            Method that sets the data defining this vector.
            </summary>
            <param name="coords">Input Double that specifies the entity's coordinates.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.ScaleBy(System.Double)">
            <summary>
            Scale this vector by the specified scale factor.
            </summary>
            <param name="scale">Input Double that specifies the scale.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.SubtractVector(Autodesk.iLogic.Types.DocumentUnitsVector)">
            <summary>
            Subtract the specified vector from this vector.
            </summary>
            <param name="vector">Input to subtract.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.DocumentUnitsVector.TransformBy(Autodesk.iLogic.Types.DocumentUnitsMatrix)">
            <summary>
            Transform this vector by the specified matrix.
            </summary>
            <param name="matrix">Input Matrix object that specifies the position and orientation of the occurrence.</param>
        </member>
        <member name="T:Autodesk.iLogic.Types.AssetWrapper">
            <summary>
            iLogic wrapper class for an Inventor.Asset.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.AssetWrapper.#ctor(Inventor.Asset)">
            <summary>
            Constructs an AssetWrapper from an Asset object.
            </summary>
            <param name="asset"></param>
        </member>
        <member name="P:Autodesk.iLogic.Types.AssetWrapper.Asset">
            <summary>
            Gets the underlying Inventor API asset object.
            </summary>
        </member>
        <member name="T:Autodesk.iLogic.Types.ManagedComponentOccurrence">
            <summary>
            Provides functions and properties for a managed assembly component occurrence.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.ManagedComponentOccurrence.#ctor(Inventor.ComponentOccurrence)">
            <summary>
            Construct an object from an Inventor.ComponentOccurrence.
            </summary>
            <param name="occ">The component occurrence.</param>
        </member>
        <member name="P:Autodesk.iLogic.Types.ManagedComponentOccurrence.Name">
            <summary>
            Gets the component name.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.ManagedComponentOccurrence.Occurrence">
            <summary>
            Gets the component occurrence.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.ManagedComponentOccurrence.Child(System.String)">
            <summary>
            Gets a child component of this occurrence.
            </summary>
            <param name="name">The name of the child component.</param>
        </member>
        <member name="M:Autodesk.iLogic.Types.ManagedComponentOccurrence.Parameter(System.String)">
            <summary>
            Gets a parameter value in the document of the managed occurrence.
            </summary>
            <param name="name">The parameter name.</param>
            <returns></returns>
        </member>
        <member name="P:Autodesk.iLogic.Types.ManagedComponentOccurrence.ParameterProvider">
            <summary>
            For internal use.
            </summary>
            <remarks>
            This must be set before using this class.
            </remarks>
        </member>
        <member name="T:Autodesk.iLogic.Types.IManagedComponentParameterProvider">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.IManagedComponentParameterProvider.GetParameters(Inventor.ComponentOccurrence)">
            <summary>
            For internal use.
            </summary>
            <param name="componentOccurrence"></param>
        </member>
        <member name="T:Autodesk.iLogic.Types.IManagedComponentParameters">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.IManagedComponentParameters.GetParameterValue(System.String)">
            <summary>
            For internal use.
            </summary>
        </member>
        <member name="T:Autodesk.iLogic.Types.ManagedPattern">
            <summary>
            Managed wrapper for an Inventor OccurrencePattern.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.ManagedPattern.#ctor(Inventor.OccurrencePattern)">
            <summary>
            Construct a managed pattern from an Inventor.OccurrencePattern.
            </summary>
            <param name="pattern"></param>
        </member>
        <member name="P:Autodesk.iLogic.Types.ManagedPattern.Element(System.Object)">
            <summary>
            Gets an element in the pattern.
            </summary>
            <param name="index">The index or name of the element.</param>
        </member>
        <member name="P:Autodesk.iLogic.Types.ManagedPattern.Pattern">
            <summary>
            Gets the underlying Inventor API pattern object.
            </summary>
        </member>
        <member name="T:Autodesk.iLogic.Types.PointOrMatrix">
            <summary>
            A PointOrMatrix class can wrap a DocumentUnitsPoint or a DocumentUnitsMatrix.
            Only one of Point or Matrix should be non-null.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.PointOrMatrix.Point">
            <summary>
            Gets the DocumentUnitsPoint. 
            (If this is Nothing, use the Matrix property to get the matrix.)
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.PointOrMatrix.Matrix">
            <summary>
            Get the DocumentUnitsMatrix.
            (If this is Nothing, use the Point property to get the point.)
            </summary>
        </member>
        <member name="T:Autodesk.iLogic.Types.Resources.ExceptionMsgs">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.Resources.ExceptionMsgs.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.Resources.ExceptionMsgs.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.Resources.ExceptionMsgs.UnitsAreNotTheSame">
            <summary>
              Looks up a localized string similar to {0} The units of geometries are not the same..
            </summary>
        </member>
        <member name="T:Autodesk.iLogic.Types.StringOrAsset">
            <summary>
            Wrapper for an asset object or asset name.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.StringOrAsset.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Autodesk.iLogic.Types.StringOrAsset.Asset">
            <summary>
            Gets the asset object.
            </summary>
        </member>
        <member name="M:Autodesk.iLogic.Types.StringOrAsset.#ctor(System.String)">
            <summary>
            Constructor.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.StringOrAsset.#ctor(Autodesk.iLogic.Types.AssetWrapper)">
            <summary>
            Constructor.
            </summary>
            <param name="asset"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.StringOrAsset.op_Implicit(System.String)~Autodesk.iLogic.Types.StringOrAsset">
            <summary>
            Converts a name.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Autodesk.iLogic.Types.StringOrAsset.op_Implicit(Autodesk.iLogic.Types.AssetWrapper)~Autodesk.iLogic.Types.StringOrAsset">
            <summary>
            Converts an asset.
            </summary>
            <param name="asset"></param>
        </member>
        <member name="P:Autodesk.iLogic.Types.StringOrAsset.IsNull">
            <summary>
            Returns true if this object contains no data.
            </summary>
        </member>
    </members>
</doc>
